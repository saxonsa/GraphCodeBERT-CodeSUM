0	can t use flatten as it will flatten hashes
1	The default formatting is nearly unreadable so make it useful .
2	Extract the query parameters and append them to the url
3	Return a hash of headers whose keys are capitalized strings
4	Given a MIME type or file extension return either a MIME type or if none is found the input unchanged .
5	Construct a subresource preserving authentication .
6	Hash of cookies extracted from response headers .
7	Cookie jar extracted from response headers .
8	Follow a redirection response but change the HTTP method to GET and drop the payload from the original request .
9	Follow a redirection
10	The logic for dispatching any additional actions that need to be taken . For instance calling the request phase if the request path is recognized .
11	Responds to an OPTIONS request .
12	Performs the steps necessary to run the callback phase of a strategy .
13	This is called in lieu of the normal request process in the event that OmniAuth has been configured to be in test mode .
14	Instance methods .
15	Retrieve correct soap_header_handler .
16	Returns an instance of ReportUtils object with all utilities relevant to the reporting .
17	Returns an instance of BatchJobUtils object with all utilities relevant to running batch jobs .
18	Executes block with a temporary flag set to a given value . Returns block result .
19	Validates given arguments based on provided fields list .
20	Special handling for choice types . Goes over each item checks xsi_type is set and correct and injects new node for it into the tree . After that recurces with the correct item type .
21	Checks if no extra fields provided outside of known ones .
22	Checks the provided data structure matches wsdl definition .
23	Overrides non - standard name conversion .
24	Overrides non - default namespace if requested .
25	Validates single argument .
26	Validates Array argument .
27	Validates Hash argument .
28	Validates Time argument .
29	Adds Savon attribute for given node key name and value .
30	Prefixes a key with a given namespace index or default namespace .
31	Returns type signature with all inherited fields .
32	Returns all inherited fields of superclasses for given type .
33	Converts Time to a hash for XML marshalling .
34	Reads a configuration file into instance variable as a Ruby structure with the complete set of keys and values .
35	Auxiliary method to recurse through a hash and convert all the keys to symbols .
36	Finds a value for string of format level1 . level2 . name in a given hash .
37	Initializes an upload URL to get the actual URL to which to upload operations .
38	Puts the provided operations to the provided URL allowing for incremental followup puts .
39	Downloads the results of a batch job from the specified URL .
40	Given a full SOAP xml string extract just the operations element from the SOAP body as a string .
41	Removes extraneous XML information from return hash .
42	Determining whether another page exists when dealing with bid landscapes is different from other types of queries . Use this method for those cases .
43	Does the given version exist and contain the given service?
44	Get the endpoint for a service on a given API version .
45	Perform the loading of the necessary source files for a version .
46	Returns the full module name for a given service .
47	Generates an array of WSDL URLs based on defined Services and version supplied . This method is used by generators to determine what service wrappers to generate .
48	Processes a given + block + . Yields objects if the block expects any arguments . Otherwise evaluates the block in the context of + instance + .
49	Yields a number of objects to a given + block + depending on how many arguments the block is expecting .
50	Evaluates a given + block + inside + instance + . Stores the original block binding .
51	Removes all blank values from a given + hash + .
52	Get values as an array the format the Ad Manager API expects .
53	Create an individual value object by inferring the xsi_type . If the value type isn t recognized return the original value parameter .
54	Return a list of validation errors .
55	Create a statement object that can be sent in a Ad Manager API request .
56	When an unrecognized method is applied to AdManagerDate pass it through to the internal ruby Date .
57	Convert AdManagerDateTime into a hash representation which can be consumed by the Ad Manager API . E . g . a hash that can be passed as PQL DateTime variables .
58	When an unrecognized method is applied to AdManagerDateTime pass it through to the internal ruby Time .
59	Creates and sets up Savon client .
60	Generates and returns SOAP XML for the specified action and args .
61	Executes SOAP action specified as a string with given arguments .
62	Executes the SOAP request with original SOAP name .
63	Checks for errors in response and raises appropriate exception .
64	Finds an exception object for a given response .
65	Yields to user - specified block with additional information such as headers .
66	Log the request response and summary lines .
67	Format headers redacting sensitive information .
68	Format the fault message by capping length and removing newlines .
69	Check whether or not to log request summaries based on log level .
70	Check whether or not to log payloads based on log level .
71	Downloads a report and saves it to a file .
72	Downloads a report with AWQL and saves it to a file .
73	Streams a report with AWQL as a string to the given block . This method will not do error checking on returned values .
74	Returns a helper object that can manage breaking the streamed report results into individual lines .
75	Send POST request for a report and returns Response object .
76	Send POST request for a report with AWQL and returns Response object .
77	Makes request and AdHoc service and returns response .
78	Prepares headers for report request .
79	Saves raw data to a file .
80	Logs HTTP headers on debug level .
81	Checks downloaded data for error signature . Raises ReportError if it detects an error .
82	Checks for an XML error in the response body and raises an exception if it was found .
83	Renders a report definition hash into XML text .
84	Checks if the report definition looks correct .
85	Adds fields order hint to generator based on specification .
86	Initializes a header handler .
87	Initializes CredentialHandler . Returns credentials set for the next call .
88	Set the credentials hash to a new one . Calculate difference and call the AuthHandler callback appropriately .
89	Generates string for UserAgent to put into headers .
90	Generates an array of extra user agents to include in the user agent string .
91	Extracts misc data from response header .
92	Extracts misc data from SOAP fault .
93	Normalizes all fields for the given data based on the fields list provided .
94	Normalizes one field of a given data recursively .
95	Normalizes every item of an Array .
96	Normalizes every item of a Hash .
97	Determines a choice type override for for the field . Returns nil if no override found .
98	Finds the choice option matching data provided .
99	Converts one leaf item to a built - in type .
100	Checks if the field signature allows an array and forces array structure even for a signle item .
101	Handles attributes received from Savon .
102	Obtain an API service given a version and its name .
103	Authorize with specified authentication method .
104	Updates default configuration file to include OAuth2 token information .
105	Auxiliary method to test parameters correctness for the service request .
106	Auxiliary method to create an authentication handler .
107	Handle loading of a single service . Creates the wrapper sets up handlers and creates an instance of it .
108	Auxiliary method to create a default Logger .
109	Helper method to load the default configuration file or a given config .
110	Initializes config with default values and converts existing if required .
111	Converts value of a config key to uppercase symbol .
112	Converts complete class path into class object .
113	Renders the Farm into JSON to show for the end - user in front . rb .
114	Returns TRUE if a file for this wallet is already in the queue .
115	Check whether this tax payment already exists in the wallet .
116	This method is thread - safe
117	Creates an empty wallet with the specified ID and public key .
118	Returns current wallet balance .
119	Add a payment transaction to the wallet .
120	Add a transaction to the wallet .
121	Returns TRUE if the wallet contains a payment sent with the specified ID which was sent to the specified beneficiary .
122	Returns TRUE if the wallet contains a payment received with the specified ID which was sent by the specified beneficiary .
123	Age of wallet in hours .
124	Calculate the maximum transaction ID visible currently in the wallet . We go through them all and find the largest number . If there are no transactions zero is returned .
125	Returns list of Wallet IDs which were affected
126	Returns exit code
127	Add a new thread
128	Kill them all immediately and close the pool
129	As a hash map
130	As a text
131	Add legacy transactions first since they are negative and can t be deleted ever . This method is called by merge . rb in order to add legacy negative transactions to the patch before everything else . They are not supposed to be disputed ever .
132	Returns TRUE if the file was actually modified
133	Delete all copies that are older than the max age provided in seconds .
134	Returns the name of the copy
135	Go through the list of remotes and call a provided block for each of them . See how it s used for example in fetch . rb .
136	Marks all the posts from the given one as unread for the given user
137	Find a record by ID or return the passed record .
138	Whether this is visible to the given user based on the moderation state .
139	Set worklist protection
140	Sets the default Format of the column at _idx_ .
141	Updates the Row at _idx_ with the following arguments .
142	Merges multiple cells into one .
143	Returns a copy of self with nil - values appended for empty cells that have an associated Format . This is primarily a helper - function for the writer classes .
144	Change the RGB components of the elements in the colour palette .
145	The Format at _idx_ or - if _idx_ is a String - the Format with name == _idx_
146	The Worksheet at _idx_ or - if _idx_ is a String - the Worksheet with name == _idx_
147	Write this Workbook to a File IO Stream or Writer Object . The latter will make more sense once there are more than just an Excel - Writer available .
148	Traverses the resource looking for associations then descends into those associations and checks for applicable resources to side load
149	Adds an item to this collection
150	Executes actual GET from API and loads resources into proper class .
151	Sends methods to underlying array of resources .
152	Tries to place side loads onto given resources .
153	Saves returning false if it fails and attaching the errors
154	Saves associations Takes into account inlining collections and id setting on the parent resource .
155	Reloads a resource .
156	Creates multiple resources using the create_many endpoint .
157	Creates or updates resource using the create_or_update endpoint .
158	Creates or updates multiple resources using the create_or_update_many endpoint .
159	If this resource hasn t already been deleted then do so .
160	Destroys multiple resources using the destroy_many endpoint .
161	Updates multiple resources using the update_many endpoint .
162	Returns the update to a ticket that happens when a macro will be applied .
163	Handles resources such as tickets . Any options are passed to the underlying collection except reload which disregards memoization and creates a new Collection instance .
164	yield to a builder block in which all defined apps will only respond for the given version
165	Parses arguments to track! method and return array with timestamp identity and array of values .
166	Render the named template . Used for reporting and the dashboard .
167	prevent certain url helper methods from failing so we can run erb templates outside of rails for reports .
168	Dumbed down from Rails simple_format .
169	Returns the experiment . You may not have guessed but this method raises an exception if it cannot load the experiment s definition .
170	Check to make sure we set a custome path it exists and there are non - dotfiles in the directory .
171	Build jobs and run . This is NOT interface for users .
172	The GetUserConfiguration operation gets a user configuration object from a folder .
173	Build the FolderShape element
174	Build the ItemShape element
175	Build the IndexedPageItemView element
176	Build the FolderIds element
177	Build the DistinguishedFolderId element
178	Build the FolderId element
179	Build the AdditionalProperties element
180	Build the Mailbox element . This element is commonly used for delegation . Typically passing an email_address is sufficient
181	Request all known time_zones from server
182	Specifies an optional time zone for the start time
183	Specifies an optional time zone for the end time
184	Specify a time zone
185	Build the Restriction element
186	Build the CalendarView element
187	Build the ContactsView element
188	Build the AttachmentIds element
189	A helper method to dispatch to an ItemId OccurrenceItemId or a RecurringMasterItemId
190	A helper method to dispatch to a AppendToItemField SetItemField or DeleteItemField
191	A helper to dispatch to a FieldURI IndexedFieldURI or an ExtendedFieldURI
192	Insert item enforce xmlns attribute if prefix is present
193	Updates the specified item attributes
194	Defines a request to synchronize a folder hierarchy on a client
195	Synchronizes items between the Exchange server and the client
196	Get information about when the user with the given email address is available .
197	Move this item to a new folder
198	Copy this item to a new folder
199	Get a specific item by its ID .
200	Handles the CreateItem call for Forward ReplyTo and ReplyAllTo It will handle the neccessary actions for adding attachments .
201	validate the CreateItem response .
202	Fetch items since a give DateTime
203	Fetch items between a given time period
204	Search on the item subject
205	Syncronize Items in this folder . If this method is issued multiple times it will continue where the last sync completed .
206	Subscribe this folder to events . This method initiates an Exchange pull type subscription .
207	Unsubscribe this folder from further Exchange events .
208	Checks a subscribed folder for events
209	Get a specific folder by its ID .
210	Request list of server known time zones
211	Defines a request to copy folders in the Exchange store
212	Defines a request to move folders in the Exchange store
213	Update properties for a specified folder There is a lot more building in this method because most of the builders are only used for this operation so there was no need to externalize them for re - use .
214	Empties folders in a mailbox .
215	Creates either an item or file attachment and attaches it to the specified item .
216	Resolve ambiguous e - mail addresses and display names
217	Converts item and folder identifiers between formats .
218	Creates a new appointment
219	Provides detailed information about the availability of a set of users rooms and resources within a specified time window .
220	Gets the rooms that are in the specified room distribution list
221	Gets the room lists that are available within the Exchange organization .
222	Some operations only exist for certain versions of Exchange Server . This method should be called with the required version and we ll throw an exception of the currently set
223	Build the common elements in the SOAP message and yield to any custom elements .
224	Change a ruby_cased string to CamelCased
225	Convert an ISO8601 Duration format to seconds
226	Used to subscribe client applications to either push pull or stream notifications .
227	Create a push subscription to a single folder
228	Coerces value to DateTime
229	Gets a collection of entries which links to current entry
230	Gets a specific entry
231	Returns the X - Contentful - User - Agent os data
232	Returns the X - Contentful - User - Agent
233	Returns the headers used for the HTTP requests
234	Runs request and parses Response
235	Runs Resource Builder
236	Queries contentful for the Resource the Link is refering to Takes an optional query hash
237	Returns all fields of the asset with locales nested by field
238	Issues the request that was made to fetch this response again . Only works for Entry Asset ContentType and Space
239	Field definition for field
240	Iterates over all pages of the current sync
241	Coerces value to proper type
242	Set the extension parameters for a specific vendor
243	Parse tool configuration data out of the Common Cartridge LTI link XML
244	Generate XML from the current settings
245	Load some seed data . There are two ways to do this .
246	Initializes the pipeline with all the processing options . Determines the destination and calls the processor .
247	Determines the appropriate destination image format .
248	Creates a new tempfile for the destination file yields it and refreshes the file descriptor to get the updated file .
249	In case of processing errors both libvips and imagemagick will leave the empty destination file they created so this method makes sure it is deleted in case an exception is raised on saving the image .
250	Add multiple operations as a hash or an array .
251	Call the defined processing and get the result . Allows specifying the source file and destination .
252	Creates a new builder object merging current options with new options .
253	The Cookie key - > value pairs returned with the response .
254	Creates a new session cache .
255	Provides an active HTTP session for a given URL .
256	Destroys an HTTP session for the given scheme host and port .
257	Sanitizes a URL based on filtering options .
258	Returns a parsed document object for HTML XML RSS and Atom pages .
259	The charset included in the Content - Type .
260	Determines if any of the content - types of the page include a given type .
261	Add a cookie to the jar for a particular domain .
262	Retrieve cookies for a domain from a page response header .
263	Returns the pre - encoded Cookie for a given host .
264	Creates a new auth store .
265	Add an auth credential to the store for supplied base URL .
266	Start spidering until the queue becomes empty or the agent is paused .
267	Enqueues a given URL for visiting only if it passes all of the agent s rules for visiting a given URL .
268	Requests and creates a new Page object from a given URL .
269	Posts supplied form data and creates a new Page object from a given URL .
270	Visits a given URL and enqueus the links recovered from the URL to be visited later .
271	Prepares request headers for the given URL .
272	Normalizes the request path and grabs a session to handle page get and post requests .
273	Determines if a given URL should be visited .
274	Creates a new Rules object .
275	Pass every HTML document that the agent parses to a given block .
276	Pass every XML document that the agent parses to a given block .
277	Pass every RSS document that the agent parses to a given block .
278	Pass every Atom document that the agent parses to a given block .
279	Initializes filtering rules .
280	Enumerates over the meta - redirect links in the page .
281	Enumerates over every HTTP or meta - redirect link in the page .
282	Enumerates over every link in the page .
283	Enumerates over every absolute URL in the page .
284	Normalizes and expands a given link into a proper URI .
285	Serializes the object POSTs it to + url + with + format + deserializes the returned document and updates properties accordingly .
286	GETs + url + with + format + deserializes the returned document and updates properties accordingly .
287	Serializes the object PUTs it to + url + with + format + deserializes the returned document and updates properties accordingly .
288	Iterate through objects in response fetching the next page of results from the API as needed .
289	Sign a single transaction
290	Sign a batch of transactions
291	Set the client to use no authentication mechanisms
292	Set the client to use HTTP Basic Authentication
293	Set the client to use Bearer Token Authentication
294	Extract the request payload in the specified format defaults to XML
295	Splits a network into different subnets
296	Returns a new IPv4 object from the supernetting of the instance network .
297	This method implements the subnetting function similar to the one described in RFC3531 .
298	Returns the difference between two prefixes or a prefix and a number as a Integer
299	generate a Bot object . if the DSL is being called from a Bot object just return it otherwise create a bot and return that
300	specify a bot - specific blocklist of users . accepts an array or a comma - delimited string . when called any subsequent calls to search or replies will filter out these users .
301	specify a bot - specific safelist of users . accepts an array or a comma - delimited string . when called any subsequent calls to search or replies will only act upon these users .
302	specify list of strings we will check when deciding to respond to a tweet or not . accepts an array or a comma - delimited string . when called any subsequent calls to search or replies will filter out tweets with these strings
303	set the consumer secret
304	set the consumer key
305	set the secret
306	set the token
307	take a variable list of strings and possibly arrays and turn them into a single flat array of strings
308	simple wrapper for favoriting a message
309	handle the bots timeline
310	Is this tweet from a user on our safelist?
311	internal search code
312	simple wrapper for sending a message
313	reply to a tweet
314	send a direct message
315	check direct messages for the bot
316	print out a message about getting a PIN from twitter then output the URL the user needs to visit to authorize
317	Ask the user to get an API key from Twitter .
318	given an array or object return the highest id we can find
319	load in a config file
320	get any config from our global config files
321	bot - specific config settings
322	load in the config from the assortment of places it can be specified .
323	simple wrapper for retweeting a message
324	run the bot with the REST API
325	handle replies for the bot
326	Based on the text of this tweet should it be skipped?
327	Is this tweet from a user on our blocklist?
328	reset the since_id for this bot to the highest since_id we can get by running a really open search and updating config with the max_id
329	copied from t the awesome twitter cli app
330	query twitter for the bots screen name . we do this during the bot registration process
331	handle oauth for this request . if the client isn t authorized print out the auth URL and get a pin code back from the user If + do_update_config + is false don t udpate the bots config file after authorization . This defaults to true but chatterbot - register will pass in false because it does some other work before saving .
332	This method empties out the container It should ONLY be used for testing purposes
333	Converts a namespaced symbol or string to a proper class name with modules
334	Closes the writer by finishing the compressed data and flushing it to the delegate .
335	Returns a Time instance which is equivalent to the time represented by this object .
336	Iterates through each entry of a readable ZIP archive in turn yielding each one to the given block .
337	Adds _entry_ into a writable ZIP archive .
338	Extracts the contents of the archive to _destination_ where _destination_ is a path to a directory which will contain the contents of the archive . The destination path will be created if it does not already exist .
339	Returns the file offset of the first record in the central directory . _io_ must be a seekable readable IO - like object .
340	Writes all the entries of this archive to _io_ . _io_ must be a writable IO - like object providing a _write_ method . Returns the total number of bytes written .
341	Once the view is assigned we initialize everything
342	This will respond to both a GET and a POST
343	Registers a rendering extention .
344	Returns the method that was called by the HTTP request .
345	Sends a block of data setting a file name mime type and content disposition headers when possible . This should also be a good choice when sending large amounts of data .
346	Builds a feedback edge set which is a set of edges creating a cycle
347	Detects a cycle . Based on escalation returns true or raises exception if there is a cycle
348	Recursive method for traversing dependencies and finding a cycle
349	An iterator that can fetch batches of the AR objects based on a set of attribute_indexes
350	Given hash of attributes we assign them to InventoryObject object using its public writers
351	Assigns value based on the version attributes . If versions are specified it asigns attribute only if it s newer than existing attribute .
352	Assigns attribute representing version of the whole row
353	Find candidates for unique key . Candidate must cover all columns we are passing as keys .
354	List attributes causing a dependency and filters them by attributes_blacklist and attributes_whitelist
355	Attributes that are needed to be able to save the record i . e . attributes that are part of the unique index and attributes with presence validation or NOT NULL constraint
356	Returns fixed dependencies which are the ones we can t move because we wouldn t be able to save the data
357	Returns what attributes are causing a dependencies to certain InventoryCollection objects .
358	Returns array of records identities
359	Returns a hash with a simple record identity
360	Declares settings function .
361	If it is a Failure it will return a new Failure with the provided value
362	type - Return type of the method . c_name - C Name . args - Array of Arrays containing data type and variable name .
363	Generate a range of inputs spaced by powers .
364	Gather times for each input against an algorithm
365	Find a line of best fit that approximates logarithmic function
366	Finds a line of best fit that approxmimates power function
367	Find a line of best fit that approximates exponential function
368	Fit the performance measurements to construct a model with slope and intercept parameters that minimize the error .
369	Take a fit and estimate behaviour at input size n
370	Adds given symbols to the exported_symbols array
371	Exposes all private methods and private constants as public
372	Add a file glob or array of file globs to monitor for changes .
373	Records that each path in + files + depends on + dependency + . If there is a modification to + dependency + all related files will be reloaded after + dependency + is reloaded . Both + dependency + and each entry in + files + can be an array of path globs .
374	Record that a class is split into multiple files . + main_file + should be the main file for the class which should require all of the other files . + files + should be a list of all other files that make up the class .
375	Calculates the difference in milliseconds between the HTTP_X_REQUEST_START time and the current time .
376	Create a TwoCaptcha API client .
377	Upload a captcha to 2Captcha .
378	Retrieve information from an uploaded captcha .
379	Load a captcha raw content encoded in base64 from options .
380	Perform an HTTP request to the 2Captcha API .
381	Fail if the response has errors .
382	Public - Search entries in the ldap server .
383	Internal - Determine whether to use encryption or not .
384	Internal - Configure virtual attributes for this server . If the option is true we ll use the default virual attributes . If it s a Hash we ll map the attributes in the hash .
385	This more of an internal method use one of the static constructors instead
386	Adds intendations and newlines to + xml + to make it more readable
387	Used for Sidekiq 2 . x only
388	Acquire the lock
389	Release the lock
390	Forks the current process and starts a new mock Redis server on port 6380 .
391	Configure the redis connection to use
392	Disconnect then reconnect the redis connection .
393	Starts an inactivity checker which will ping redis if nothing has been heard on the connection for trigger_secs seconds and forces a reconnect after a further response_timeout seconds if we still don t hear anything .
394	Subscribe to a pubsub channel
395	Unsubscribe all callbacks for a given channel
396	Unsubscribe a given callback from a channel . Will unsubscribe from redis if there are no remaining subscriptions on this channel
397	Pattern subscribe to a pubsub channel
398	Pattern unsubscribe all callbacks for a given pattern
399	Unsubscribe a given callback from a pattern . Will unsubscribe from redis if there are no remaining subscriptions on this pattern
400	Send a command to redis without adding a deferrable for it . This is useful for commands for which replies work or need to be treated differently
401	Perform a batch search .
402	Perform a search returning the results as an enumerator .
403	Advanced search .
404	Processes HTTP Request and returns parsed response Otherwise throws error
405	Fetches the tokens hash from the server and updates
406	Rails 3 . 0 and 3 . 1 + support
407	Just because a message was recieved via SQS doesn t mean it was originally broadcast via SNS
408	Returns a representation of the transaction as it would appear in a qif file .
409	Tests that the document content has not been edited
410	Looks up node by id checks that there s only a single node with a given id
411	The verification process assumes that all signatures are enveloped . Since this process is destructive the document needs to verify itself first and then any signed assertions
412	This is trivial to define with named arguments however Ruby 2 . 6 removed the support for mixing strings and symbols as argument keys so we re forced to perform manual decoding . The complexity of this code supports the rationale for the removal of the functionality .
413	Currently any completion suffix is ignored and stripped .
414	This is a fast report based on SAX parser
415	Select modified and added files in this PR
416	It returns a specific class code coverage and an emoji status as well
417	It returns total of project code coverage and an emoji status as well
418	Wraps the Java InputStream for the level of Rack compliance desired .
419	Turns a Servlet request into a Rack request hash .
420	Handle exceptions returning a generic 500 error response .
421	Walk through the list of every file we ve loaded .
422	Takes a relative or absolute + file + name a couple possible + paths + that the + file + might reside in . Returns a tuple of the full path where the file was found and its modification time or nil if not found .
423	Returns the modification time of _file_ .
424	Fetch a model from the server by its ID .
425	Return a new Authenticator instance .
426	Return the profile of the user accessing the API .
427	Try to persist the current object to the server by creating a new resource or updating an existing one . Raise an error if the object can t be saved .
428	Update the attributes of this model . Assign the attributes according to the hash then persist those changes on the server .
429	Generates methods to enter text into a text field get its value and clear the text field
430	Generates methods to click on a button as well as get the value of the button text
431	Generates methods to get the value of a combo box set the selected item by both index and value as well as to see the available options
432	Generates methods to set a radio button as well as see if one is selected
433	Generates methods to get the value of a label control
434	Generates methods to work with link controls
435	Generates methods to work with menu items
436	Generates methods for working with table or list view controls
437	Generates methods for working with tree view controls
438	Generates methods for working with spinner controls
439	Generates methods for working with tab controls
440	Displays the flash messages found in ActionDispatch s + flash + hash using Foundation s + callout + component .
441	Fetches all refunds of your charge using the pin API .
442	Update a recipient using the pin API .
443	Update a customer using the pin API .
444	List contents of a remote directory
445	Upload a local file
446	Writes content to remote file
447	Delete a remote file
448	Receive a file from the smb server to local . If + to + was not passed a tempfile will be generated .
449	Reads a remote file and return its content
450	Execute a smbclient command
451	Connect to the server using separate threads and pipe for communications
452	remove title part components and abstract
453	Verifies that the initialized DFA is valid . Checks that each state has a transition for each symbol in the alphabet .
454	Runs the input on the machine and returns a Hash describing the machine s final state after running .
455	pass in no params to scan whole table
456	Creates a new tape .
457	Initialize a PDA object . Runs the input on the machine and returns a Hash describing the machine s final state after running .
458	Determines whether or not any transition states exist given a beginning state and input symbol pair .
459	Formats all attributes into a hash of parameters .
460	Formats times and booleans as Amazon desires them .
461	Allows easy initialization for a model by assigning attributes from a hash .
462	Creates a pipeline that may be used to change the payment method of a token .
463	Creates a pipeline that will authorize you to send money _from_ the user multiple times .
464	Creates a pipeline that will authorize you to send money _to_ the user .
465	Creates a pipeline that will authorize you to send money _from_ the user one time .
466	Converts the Pipeline object into parameters and signs them .
467	Searches through transactions on your account . Helpful if you want to compare vs your own records or print an admin report .
468	Refunds a transaction . By default it will refund the entire transaction but you can provide an amount for partial refunds .
469	This is how you verify IPNs and pipeline responses . Pass the entire request object .
470	This compiles an API request object into a URL sends it to Amazon and processes the response .
471	Commit the current changes to the resource to the remote server . If the resource was previously loaded from the server we will try to update the record . Otherwise if it s a new record then we will try to create it
472	Try to destroy this resource
473	will configure the RediSearch for the specific model
474	number of records found for keywords
475	index all records in specific model
476	index specific record
477	index existing Hash
478	delete all records in specific model
479	delete specific document from index
480	get info about specific index
481	add all values for a model attribute to autocomplete
482	add string to autocomplete dictionary
483	query dictionary for suggestion
484	delete all values for a model attribute to autocomplete
485	size of dictionary
486	Run normalization process across directory . Return the number of files that need normalization
487	Evaluate block after changing directory to specified directory
488	Validates token and returns the token or nil
489	Validates token and raises an exception if invalid
490	Updates any aspect of a subscriber including email address name and custom field data if supplied .
491	Gets the historical record of this subscriber s trackable actions .
492	Gets the active subscribers in this segment .
493	Updates this email template .
494	Gets your clients .
495	Gets the administrators for the account .
496	Set the primary contect for the account .
497	Creates a new custom field for this list . field_name - String representing the name to be given to the field data_type - String representing the data type of the field . Valid data types are Text Number MultiSelectOne MultiSelectMany Date Country and USState . options - Array of Strings representing the options for the field if it is of type MultiSelectOne or MultiSelectMany . visible_in_preference_center - Boolean indicating whether or not the field should be visible in the subscriber preference center
498	Updates a custom field belonging to this list . custom_field_key - String which represents the key for the custom field field_name - String representing the name to be given to the field visible_in_preference_center - Boolean indicating whether or not the field should be visible in the subscriber preference center
499	Updates the options of a multi - optioned custom field on this list .
500	Gets the custom fields for this list .
501	Gets the segments for this list .
502	Gets the active subscribers for this list .
503	Gets the webhooks for this list .
504	Updates the person details . password is optional and will only be updated if supplied
505	Gets the sent campaigns belonging to this client .
506	Gets the currently scheduled campaigns belonging to this client .
507	Gets the draft campaigns belonging to this client .
508	Gets the subscriber lists belonging to this client .
509	Gets the lists across a client to which a subscriber with a particular email address belongs . email_address - A String representing the subcriber s email address
510	Gets the people associated with this client
511	Gets this client s suppression list .
512	Adds email addresses to a client s suppression list
513	Gets the templates belonging to this client .
514	Sets the basic details for this client .
515	Sets the PAYG billing settings for this client .
516	Sets the monthly billing settings for this client . monthly_scheme must be nil Basic or Unlimited
517	Transfer credits to or from this client .
518	Sends a preview of this campaign .
519	Gets the email clients that subscribers used to open the campaign
520	Retrieves the opens for this campaign .
521	Retrieves the subscriber clicks for this campaign .
522	Retrieves the unsubscribes for this campaign .
523	Retrieves the spam complaints for this campaign .
524	Retrieves the bounces for this campaign .
525	Updates the administator details .
526	Flush the buffer If async is false block until the queue is empty
527	Stringify symbolized hash keys
528	Slice keys from hash
529	Login REST API
530	Returns a Mandrill API compatible attachment hash
531	Mandrill uses a different hash for inlined image attachments
532	Return the stats data in a format for the Bluff JS UI Charts
533	Pick a Minimum Peek Range Based on minumum ready jobs on all tubes
534	Get all venues for a given page .
535	Returns a list of managed pages .
536	Search for users by tip
537	Get all pending friend requests for the authenticated user
538	Get checkins for the authenticated user
539	Get all friends for a given user .
540	Get all tips for a given user optionally filtering by text .
541	Get all todos for a given user .
542	Get the photos for the authenticated user .
543	Get the venue history for the authenticated user .
544	Get the mayorships for a given user .
545	Get the lists for a given user .
546	Request friendship with a user
547	Set pings for a friend
548	Retrieve information about a tip .
549	Search for tips .
550	Search for tips from a venue .
551	Add a tip
552	Mark a tip todo for the authenticated user .
553	Retrieve information about an event
554	Retrieve information about a campaign
555	Sets up the connection to be used for all requests based on options passed during initialization .
556	Helper method to return errors or desired response data as appropriate .
557	Retrive information about a single checkin .
558	Retrive a list of recent checkins from friends .
559	Checkin on behalf of the user .
560	Add a comment to a checkin .
561	Add a reply to a checkin .
562	Retrieve information about a venuegroup
563	Create a venue group . If the venueId parameter is specified then the endpoint will add the specified venues to the venue group . If it is not possible to add all of the specified venues to the group then creation of the venue group will fail entirely .
564	Updates a venue group . At least one of the name and venueId parameters must be specified .
565	List all venue groups owned by the user .
566	Retrieve information about a special
567	Search for specials
568	Retrieve information about a list .
569	Search for trending venues
570	Search for venues by tip
571	Retrieve information about all venue categories .
572	Retrieve links for a venue .
573	Add a venue
574	Mark a venue as todo for the authenticated user
575	Suggest venue completions . Returns a list of mini - venues partially matching the search term near the location .
576	Retrieve menus for a venue .
577	Get daily venue stats for a list of venues over a time range . Client instance should represent an OAuth user who is the venues owner .
578	Update a single setting for the authenticated user .
579	Retrieve a photo
580	Add a photo
581	Retrieve photos for a venue
582	Forward a method call to the delegate .
583	Add items to the collection
584	Append items to the collection
585	this method takes an input value and transforms it to the proper local format depending on the data type that was set for a particular property key . Return the internal representation of a property value for a given data type .
586	You can get items within the collection relation filtered by a specific set of query constraints .
587	This method creates a new object of the same instance type with a copy of all the properties of the current instance . This is useful when you want to create a duplicate record .
588	Save the file by uploading it to Parse and creating a file pointer .
589	Apply a set of constraints .
590	This method takes all the parameters of the instance and creates a proper hash structure required by Parse in order to process the push notification .
591	helper method to send a message
592	Queries can be made using distinct allowing you find unique values for a specified field . For this to be performant please remember to index your database .
593	Performs the fetch request for the query .
594	Builds objects based on the set of Parse JSON hashes in an array .
595	Complies the query and runs all prepare callbacks .
596	Send a GET request .
597	Send a POST request .
598	Send a PUT request .
599	Send a DELETE request .
600	Removes a permission for an objectId or user .
601	Grants read permission on all existing users and roles attached to this object .
602	Grants write permission on all existing users and roles attached to this object .
603	Denies read permission on all existing users and roles attached to this object .
604	Denies write permission on all existing users and roles attached to this object .
605	If it is a batch respnose we ll create an array of Response objects for each of the ones in the batch .
606	This method takes the result hash and determines if it is a regular parse query result object result or a count result . The response should be a hash either containing the result data or the error .
607	Adds the third - party authentication data to for a given service .
608	You may set a password for this user when you are creating them . Parse never returns a
609	Login and get a session token for this user .
610	Invalid the current session token for this logged in user .
611	Supporting the first_or_create class method to be used in scope chaining with queries .
612	Supporting the save_all method to be used in scope chaining with queries .
613	This method adds a font to a FontTable instance . This method returns a reference to the FontTable object updated .
614	This method generates the RTF text for a FontTable object .
615	Constructor for the Node class .
616	This method retrieves a Node objects next peer node returning nil if the Node has no previous peer .
617	This method inserts a String into the existing text within a TextNode object . If the TextNode contains no text then it is simply set to the text passed in . If the offset specified is past the end of the nodes text then it is simply appended to the end .
618	This method generates the RTF equivalent for a TextNode object . This method escapes any special sequences that appear in the text .
619	This is the constructor for the ContainerNode class .
620	This is the constructor for the CommandNode class .
621	This method generates the RTF text for a CommandNode object .
622	This method provides a short cut means of creating a paragraph command node . The method accepts a block that will be passed a single parameter which will be a reference to the paragraph node created . After the block is complete the paragraph node is appended to the end of the child nodes on the object that the method is called against .
623	This method provides a short cut means of creating a new ordered or unordered list . The method requires a block that will be passed a single parameter that ll be a reference to the first level of the list . See the + ListLevelNode + doc for more information .
624	This method inserts a footnote at the current position in a node .
625	This method provides a short cut means for applying multiple styles via single command node . The method accepts a block that will be passed a reference to the node created . Once the block is complete the new node will be append as the last child of the CommandNode the method is called on .
626	This method provides a short cut means of creating a bold command node . The method accepts a block that will be passed a single parameter which will be a reference to the bold node created . After the block is complete the bold node is appended to the end of the child nodes on the object that the method is call against .
627	This method provides a short cut means of creating an italic command node . The method accepts a block that will be passed a single parameter which will be a reference to the italic node created . After the block is complete the italic node is appended to the end of the child nodes on the object that the method is call against .
628	This method provides a short cut means of creating an underline command node . The method accepts a block that will be passed a single parameter which will be a reference to the underline node created . After the block is complete the underline node is appended to the end of the child nodes on the object that the method is call against .
629	This method provides a short cut means of creating a subscript command node . The method accepts a block that will be passed a single parameter which will be a reference to the subscript node created . After the block is complete the subscript node is appended to the end of the child nodes on the object that the method is call against .
630	This method provides a short cut means of creating a superscript command node . The method accepts a block that will be passed a single parameter which will be a reference to the superscript node created . After the block is complete the superscript node is appended to the end of the child nodes on the object that the method is call against .
631	This method provides a short cut means of creating a strike command node . The method accepts a block that will be passed a single parameter which will be a reference to the strike node created . After the block is complete the strike node is appended to the end of the child nodes on the object that the method is call against .
632	This method provides a short cut means of creating a font command node . The method accepts a block that will be passed a single parameter which will be a reference to the font node created . After the block is complete the font node is appended to the end of the child nodes on the object that the method is called against .
633	This method provides a short cut means of creating a foreground colour command node . The method accepts a block that will be passed a single parameter which will be a reference to the foreground colour node created . After the block is complete the foreground colour node is appended to the end of the child nodes on the object that the method is called against .
634	This method provides a short cut menas of creating a colour node that deals with foreground and background colours . The method accepts a block that will be passed a single parameter which will be a reference to the colour node created . After the block is complete the colour node is append to the end of the child nodes on the object that the method is called against .
635	This method creates a new table node and returns it . The method accepts a block that will be passed the table as a parameter . The node is added to the node the method is called upon after the block is complete .
636	Creates a new + ListLevelNode + to implement nested lists
637	This method assigns a shading colour to a specified column within a TableNode object .
638	This method provides a means of assigning a shading colour to a selection of cells within a table . The method accepts a block that takes three parameters - a TableCellNode representing a cell within the table an integer representing the x offset of the cell and an integer representing the y offset of the cell . If the block returns true then shading will be applied to the cell .
639	This method overloads the store method inherited from the ContainerNode class to forbid addition of further nodes .
640	This method assigns a width in twips for the borders on all sides of the cell . Negative widths will be ignored and a width of zero will switch the border off .
641	This method assigns a border width to the top side of a table cell . Negative values are ignored and a value of 0 switches the border off .
642	This method assigns a border width to the right side of a table cell . Negative values are ignored and a value of 0 switches the border off .
643	This method assigns a border width to the bottom side of a table cell . Negative values are ignored and a value of 0 switches the border off .
644	This method assigns a border width to the left side of a table cell . Negative values are ignored and a value of 0 switches the border off .
645	This method retrieves an array with the cell border width settings . The values are inserted in top right bottom left order .
646	This method attempts to determine the image type associated with a file returning nil if it fails to make the determination .
647	This method generates the RTF for an ImageNode object .
648	This method converts an array to an integer . The array must be either two or four bytes in length .
649	This method loads the data for an image from its source . The method accepts two call approaches . If called without a block then the method considers the size parameter it is passed . If called with a block the method executes until the block returns true .
650	This method fetches details of the dimensions associated with an image .
651	This method assigns a new header to a document . A Document object can have up to four header - a default header a header for left pages a header for right pages and a header for the first page . The method checks the header type and stores it appropriately .
652	This method assigns a new footer to a document . A Document object can have up to four footers - a default footer a footer for left pages a footer for right pages and a footer for the first page . The method checks the footer type and stores it appropriately .
653	This method fetches a header from a Document object .
654	This method fetches a footer from a Document object .
655	This method generates the RTF text for a Document object .
656	This method adds a new colour to a ColourTable object . If the colour already exists within the table or is not a Colour object then this method does nothing .
657	This method generates a textual description for a ColourTable object .
658	This is the constructor for the Information class .
659	This method creates a textual description for an Information object .
660	This method generates the RTF text for an Information object .
661	The server processes requests here
662	This is an unhandled error on the Libuv Event loop
663	Load gazelles and make the required bindings
664	Creates a new engine .
665	Gets the first device with the specified vendor_id product_id and optionally serial_number .
666	Opens the first device with the specified vendor_id product_id and optionally serial_number .
667	Gets the device with the specified path .
668	Opens the device with the specified path .
669	Gets the USB code for the current locale .
670	Opens the device .
671	Attempts to read from the device waiting up to + milliseconds + before returning .
672	Sends a feature report to the device .
673	Gets a feature report from the device .
674	Reads a string descriptor from the USB device .
675	Computes the differences of the change logs between two audits .
676	Render the change log for the given audited model
677	Get the file path to output the html based on the file being built . The output path is relative to where guard is being run .
678	Generate a file name based on the provided file path . Provide a logical extension .
679	Friendly helper method to fetch a vApp by name - Organization object - Organization VDC Name - vApp name
680	Shutdown a given vapp
681	Create a vapp starting from a template
682	Compose a vapp using existing virtual machines
683	Create a new virtual machine from a template in an existing vApp .
684	Clone a vapp in a given VDC to a new Vapp
685	Set vApp Network Config
686	Set vApp port forwarding rules
687	Get vApp port forwarding rules
688	Merge the Configuration section of a new network and add specific configuration
689	Add a new network to a vApp
690	Create a fake NetworkConfig node whose content will be replaced later
691	Create a fake Configuration node for internal networking
692	Create a NetworkConfigSection for a new internal or external network
693	Authenticate against the specified server
694	Fetch information for a given task
695	Poll a given task until completion
696	Sends a synchronous request to the vCloud API and returns the response as parsed XML + headers .
697	Upload a large file in configurable chunks output an optional progressbar
698	Fetch details about a given catalog
699	Retrieve information about Disks
700	Set information about Disks
701	Set VM CPUs
702	Set VM RAM
703	Edit VM Network Config
704	Add a new network to a VM
705	Remove an existing network
706	Set VM Guest Customization Config
707	Fetch details about a given VM
708	Friendly helper method to fetch a vApp by name - Organization object - Organization VDC Name - vApp Name - VM Name
709	Shutdown a given vm
710	Retrieve a screen ticket that you can use with the VMRC browser plug - in to gain access to the console of a running VM .
711	Fetch details about a given Org VDC network
712	Fetch existing organizations and their IDs
713	Fetch tasks from a given task list
714	Friendly helper method to fetch a Organization VDC Id by name - Organization object - Organization VDC Name
715	Friendly helper method to fetch a Organization VDC by name - Organization object - Organization VDC Name
716	adding existing containers - related methods
717	returns the requested provider as a Provider object
718	thread safe version using shallow copy of env
719	For class context
720	Evaluate or cast
721	Runs a block in the background and displays a spinner until it completes .
722	Given a two - dimensional Array of strings representing a table of data translate each row into a single string by joining the values with whitespace such that all the columns are nicely aligned .
723	Starts the callable in a background thread and waits for it to complete . If the callable fails with an exception it will be raised here . Otherwise the main thread is paused for an initial_wait time in seconds and subsequently for periodic_wait repeatedly until the thread completes . After each wait yield is called to allow a block to execute .
724	Performs the rescuetime query and returns an array or csv response .
725	Sets the report format to a valid type
726	Parses a response from the string response body to the desired format .
727	Returns the formatter with the specified name or if not found raises an exception
728	Specifies the ordering and the interval of the returned Rescuetime report . For example the results can be ordered by time activity rank or member ; The results can be returned in intervals spanning a month a week a day an hour or 5 - minutes .
729	Limits the Rescuetime report to specific activities and documents . The name option limits the results to those where name is an exact match ; this can be used on the overview activity and category report . The document option limits the specific document title ; this is only available on the activity report .
730	Adds terms to the Rescuetime collection query
731	Returns true if the provided api key is valid . Performs a request to the Rescuetime API .
732	Requires all formatter files determined by the local path for formatters plus any additional paths set in the Rescuetime configuration .
733	Initialize the parser with a document Parse the document and save values returned by selectors
734	Dump the extracted data into a hash with symbolized keys
735	delegate is optional but should respond to call or parse
736	open web pages with UTF - 8 encoding
737	Return the Subject for this message returns for default carrier subject such as Multimedia message for ATT&T carrier .
738	Helper for process template method to determine if media contained in a part should be ignored . Producers should override this method to return true for media such as images that are advertising carrier logos etc . See the ignore section in the discussion of the built - in configuration .
739	Helper for process template method to decode the part based on its type and write its content to a temporary file . Returns path to temporary file that holds the content . Parts with a main type of text will have their contents transformed with a call to transform_text
740	Helper to decide if a part should be kept or ignored
741	Helper for process_media template method to transform text . See the transform section in the discussion of the built - in configuration .
742	Helper for process_media template method to transform text .
743	Helper for process template method to name a temporary filepath based on information in the part . This version attempts to honor the name of the media as labeled in the part header and creates a unique temporary directory for writing the file so filename collision does not occur . Consumers of this method expect the directory structure to the file exists if the method is overridden it is mandatory that this behavior is retained .
744	Helper to add a file to the media hash .
745	Helper to temp_file to create a unique temporary directory that is a child of tmp_dir This version is based on the message_id of the mail .
746	returns a filename declared for a part or a default if its not defined
747	guess content type from filename
748	If true next_sequence_value is called before each insert statement to set the record s primary key . By default DB2 for i supports IDENTITY_VAL_LOCAL for tables that have one primary key .
749	Holy moly batman! all this to tell AS400 yes i am sure
750	Creates an instance for the transfer type and return it
751	Get the next character without getting it .
752	iOS 11 + AVCapturePhotoCaptureDelegate method
753	iOS 10 AVCapturePhotoCaptureDelegate method
754	iOS 4 - 8
755	iOS 8 +
756	iOS 10 +
757	Choose an optimal number of levels between Kmin and Kmax
758	todo . value equal 10 may not be a good params
759	Useful for adding additional information into your middleware stack definition
760	Adds middleware to the current stack definition
761	Extracts the attribute definition for a given association
762	Maps an association to the attribute its data will be tied
763	Adds the given association to an array of associations for the given attribute
764	Stores all association data on the object at the given attribute . Associations with internal data use that instead of value . If only one association is present it is extracted from the array and stored as - is .
765	Sets up translation state instance to hold various attributes that need to be passed around and calls helpers to build the necessary associations and attach them to the form .
766	Mounts an application in the router as a sub application in the url space . This will route directly to the sub application and skip any middlewares etc defined on a stack
767	include? will evaluate
768	To initialize the logger you create a new object proxies to set_log .
769	Provides the directories or raw paths that are associated with a given name .
770	Provides an expanded globbed list of paths and files for a given name .
771	Provides an expanded globbed list of paths and files for a given name . The result includes only the last matched file of a given sub path and name .
772	Builds a single association with the given data
773	to improve performance we didnt assign tp as instance variable
774	Returns zero based index of cluster which a value belongs to value must be in data array
775	Returns inclusive interval limits
776	Compute the matrices required for Jenks breaks . These matrices can be used for any classing of data with classes < = n_classes
777	fetchs a movie with a given title set tomatoes to true if you want to get the rotten tomatoes ranking set plot to full if you want to have the full long plot
778	fetches a movie by IMDB id set tomatoes to true if you want to get the rotten tomatoes ranking set plot to full if you want to have the full long plot
779	Create a hash of configuration options and their values .
780	Create a user from the options
781	Update an existing user
782	Find a user by email
783	Return the URL for signing out of the auth server . Clients should redirect to this URL to globally sign out .
784	Return all users from the remote service
785	Return all user roles from the remote service
786	Create one or more new bookmark drops .
787	Change the name of the drop .
788	Modify a drop with a private URL to have a public URL or vice versa .
789	Sets the attributes for object .
790	Loads an environment specific config if available the config file is where the logger should be set if it was not we are using stdout .
791	DSL routes are located in the api folder
792	Create a new filter to run a status check . The name is used for display purposes . Run a status the status check . This method keeps track of the time it took to run the check and will trap any unexpected exceptions and report them as failures .
793	Create a new handler . This method can take a block which will yield itself so it can be configured .
794	Add a status check to the handler .
795	Lookup a status check filter from the name and arguments
796	Output the plain text response from calling all the filters .
797	Check if a host is reachable and accepting connections on a specified port .
798	self responds_to bootstrap_admin_config methods via method_missing!
799	Create an HTTP object with the options set .
800	Perform an HTTP request and return the response
801	Opens the first device with a given vendor and product ids .
802	Opens the first device with a given vendor and product ids description and serial .
803	Opens the index - th device with a given vendor and product ids description and serial .
804	Sets the chip baud rate .
805	Gets write buffer chunk size .
806	Writes data .
807	Gets read buffer chunk size .
808	Reads data in chunks from the chip . Returns when at least one byte is available or when the latency timer has elapsed . Automatically strips the two modem status bytes transfered during every read .
809	Directly read pin state circumventing the read buffer . Useful for bitbang mode .
810	Returns a new GMarker at the centroid of the geometry . The options Hash works the same as the Google Maps API GMarkerOptions class does but allows for underscored Ruby - like options which are then converted to the appropriate camel - cased Javascript options .
811	Returns a new GPolyline . Note that this GPolyline just uses whatever coordinates are found in the sequence in order so it might not make much sense at all .
812	Returns a new GPolygon . Note that this GPolygon just uses whatever coordinates are found in the sequence in order so it might not make much sense at all .
813	Spits out a Hash containing the cardinal points that describe the Geometry s bbox .
814	Build some XmlMarkup for GeoRSS . You should include the appropriate georss and gml XML namespaces in your document .
815	Returns a new Marker at the centroid of the geometry . The options Hash works the same as the Google Maps API MarkerOptions class does but allows for underscored Ruby - like options which are then converted to the appropriate camel - cased Javascript options .
816	Returns a new Polyline . Note that this Polyline just uses whatever coordinates are found in the sequence in order so it might not make much sense at all .
817	Build some XmlMarkup for GeoRSS GML . You should include the appropriate georss and gml XML namespaces in your document .
818	Special process of prices because of locales and different decimal separator characters . We want to get a format with dot as decimal separator and without thousand separator
819	match? was added in Ruby 2 . 4 this allows us to be backwards compatible with older Ruby versions
820	Dumps points similarly to the PostGIS ST_DumpPoints function .
821	Limited to 64 characters
822	Send the request to URL and return the JSON response
823	Validate IPV4 using the standard ipaddr ruby module .
824	Validate that the given string _value_ describes a well - formed IPV6 network address using the standard ipaddr ruby module .
825	Create an internal model with a reference to a public model .
826	Whether the key doesn t need to be lazily loaded .
827	Update an attribute .
828	Delete an attribute
829	Verify that all the keys marked as required are present .
830	Apply a transformation to a value .
831	Make a call to the
832	Extract the currencies from the image components src attribute
833	Add a KeyMetadata to the store .
834	Validate all the constraints listed in + options + to the given + value + .
835	Call + validate_type + with the given + object + apply the constraints and assign the sanitized object .
836	Set the given + schema + for the given property + name + . A name can be a Symbol a String or a Regexp .
837	Shortcut to say a schema + key + must be equal to a given + value + . When it does not recognize the value type it creates a any schema .
838	whether arg is holiday
839	Turns trailing command line arguments into an array for an arrayed value
840	Returns Option converted to an array .
841	Returns Option converted to a hash .
842	parse options from argument list
843	load configuration from file
844	Returns top keywords from input string .
845	generate a temp filename
846	Iterate over all the products in an ONIX file
847	retrieve the current title
848	set a new title
849	set a new subtitle
850	return an array of BIC subjects for this title could be version 1 or version 2 most ONIX files don t specifiy
851	set a new imprint
852	set a new sales restriction type
853	retrieve the number on order
854	retrieve the discount code that describes the rrp in this file
855	set the discount code that describes the rrp in this file
856	add a new subject to this product str should be the subject code type should be the code for the subject scheme you re using . See ONIX codelist 27 . 12 is BIC
857	set the value of a particular measurement
858	retrieve the value of a particular price
859	set the value of a particular price
860	set the value of a particular other text value
861	set the value of a particular website
862	Adds a friend to an instance s friend s list
863	Adds a friend to an instance s friend s list Similar to . befriend but will raise an error if the operation is not successful
864	Removes a friend from an instance s friend s list
865	to be used as an around_filter
866	What Rails expects
867	collects non empty directories and names the metric by the folder name parent? or dirname? or basename?
868	Set given pixel identified by + index + to + color +
869	Set given pixel identified by + index + to + r + + g + + b +
870	Return + Color + of led located at given index
871	Print the given server path relative to the current directory
872	If this pattern represents an exact path returns the exact path .
873	Set given pixel identified by + x + + y + to + color +
874	Set given pixel identified by + x + + y + to + r + + g + + b +
875	Set rotation of the Unicorn HAT to + val +
876	Verify supplied coords + x + and + y +
877	Validates the object against the schema .
878	Returns the object as a hash .
879	Export this map to the given filename in the appropriate format .
880	Export this map as a string in the appropriate format .
881	Dumps scraped objects to disk .
882	Saves scraped objects to a database .
883	Dumps an scraped object to disk .
884	Loads scraped objects from disk .
885	Loads a scraped object from its properties .
886	Removes all duplicate objects and re - assigns any foreign keys .
887	For each object map its ID to the ID of its duplicate if any .
888	If any objects have unresolved foreign objects we cannot derive an evaluation order using a dependency graph .
889	Builds a dependency graph .
890	Resolves an object s foreign keys from object IDs to database IDs .
891	Resolves an object s foreign objects to database IDs .
892	Runs the action .
893	Adds a group result .
894	Adds a count .
895	Adds a list of artifacts to the danger comment
896	Add a delete operation to the transaction
897	Performs the transaction .
898	Allows finding by type or a specfied hash of parameters
899	Fibonacci linear feedback shift register with x^25 + x^24 + x^23 + x^22 + 1 poly
900	Creates a new instance of the command and sets up OptionParser .
901	Returns the value of a given option . The option can be specified using either the short or long name .
902	Delgate api call to Request
903	Check if this object is in a chain .
904	Iterates over each item before this in reverse order . If a block is not given an enumerator is returned .
905	Iterates over each item after this . If a block is not given an enumerator is returned .
906	Wether or not this payment result can be considered valid . Authentication is checked payload and authentication should be available and the decoded JSON should be valid JSON . When the result is valid it is safe to assume no - one tampered with it and that it was sent by Bitkassa .
907	Perform the backup
908	Runs one ore more commands remotely via ssh
909	Find out which schedule to run
910	Sets defaults for the configuration . Enable or disable debug mode . Boolean .
911	Creates a new instance of the Option class .
912	Shift the first item off the list .
913	This method simplify results structure it sets only one level of nesting by leaving parents only with collection as child
914	Retrieves the stats for the pet with the specified ID .
915	Retrieves the realm status for the region . If any realms are specified as parameters only the status of these realms will be returned .
916	Get tile with given latitude longitude and zoom . Returns Raw PNG data which could be saved to file
917	Get tile with given x y numbers and zoom Returns Raw PNG data which could be saved to file
918	Iterates over each item in the list If a block is not given an enumerator is returned .
919	Iterates over each item in the list in reverse order . If a block is not given an enumerator is returned .
920	Register an extension with a target class When given a block the block is used to create an anonymous module
921	Remove extensions for a given class or list of classes
922	inversion of control method required by the AuditorAPI
923	Creates a migration builder for the given database .
924	Generates the change block of the migration .
925	Generates any create table statements for new tables .
926	Generates any alter table statements for current tables .
927	Generates an individual alter table statement .
928	Generates an individual create_table statement .
929	Creates a watir browser session and returns the browser object
930	Creates a Selenium driver session and returns the driver object
931	Returns the target and options including the capabilities
932	Extracts browser version platform device from the browser string
933	Extracts browser from browser string
934	Extracts version from browser string
935	Extracts platform from browser string
936	Extracts device from browser string
937	Extract the most likely looking number from the string . This will be the first string of digits - and - hyphens - and - maybe - a - trailing - X with the hypens removed
938	Extract the most likely looking numbers from the string . This will be each string with digits - and - hyphens - and - maybe - a - trailing - X with the hypens removed
939	on creation set automatically lft and rgt to the end of the tree
940	Update cached level attribute for self and descendants
941	Prunes a branch off of the tree shifting all of the elements on the right back to the left so the counts still work
942	Adds word and its category to stats .
943	Generate a form button .
944	Basic container generator for use with blocks .
945	Generate a suitable form input for a given method by performing introspection on the type .
946	Introspection on an association to determine if a method is a file . This is determined by the methods ability to respond to file methods .
947	Create an array from a string a symbol or an undefined value . The default is to return the value and assume it has already is valid .
948	Type checks a given object . Special consideration is given to the pseudo - class Boolean which does not actually exist in Ruby but is commonly used to mean TrueClass FalseClass .
949	Toggle the status of an outlet
950	Make an http request and return the result .
951	Follow Apple s recommendation not to encode missing values .
952	Specifies how to sort . only ascending sort is supported in the short form . For descending implement the block form .
953	performs a like query .
954	performs a set - inclusion test .
955	performs strict equality comparison .
956	performs greater - than comparison .
957	performs less - than comparison .
958	performs greater - than - or - equal comparison .
959	performs less - than - or - equal comparison .
960	performs inequality comparison .
961	Give the Nth inversion of the chord which simply adjusts the lowest N notes up by one octive
962	My classes .
963	Array of messages for a given field . Results are always an array because a field can fail multiple validations .
964	Validates that something has been endntered in a field . Should catch Fixnums Bignums and Floats . Nils and Strings should be handled as well Arrays Hashes and other datatypes will not .
965	Validates that the length is in a given range of characters . E . g .
966	Validates contents of field against a given Regexp . This can be tricky because you need to anchor both sides in most cases using \ A and \ Z to get a reliable match .
967	Set created_at and updated_at fields
968	Associate the owner but without rebuilding the inverse assignment
969	Creates a Stellar client scoped to an assignment .
970	Client for accessing public information .
971	Fetches a page from the Stellar site .
972	+ field_at + retrieves the field at a given index .
973	+ bind + fetches all mapped fields from any subview of the current + UIView + and transfers the contents to the corresponding fields of the model specified by the + model + method .
974	Undo all the rejiggering when the keyboard slides down .
975	convenient method for status only responses
976	Initialisation of the middleware
977	Returns the raw data with all of the filters applied
978	Filters and returns the raw data values for the specifid key and options
979	Before generating syntax we need to handle some controller - level options that require global modification of the metadata .
980	Before generating syntax run a sanity check on the metadata .
981	- native_sql_to_type - active? - reconnect! - disconnect! - exec_query - exec_insert - exec_delete - exec_update + do_exec - execute
982	- begin_db_transaction - commit_db_transaction - rollback_db_transaction - begin_isolated_db_transaction - supports_transaction_isolation? - write_large_object - pk_and_sequence_for - primary_key - primary_keys
983	+ change_column This only works in a VERY limited fashion . For example VARCHAR columns cannot be shortened one column type cannot be converted to another .
984	Helper methods for values and their labels .
985	Update the ttl
986	Hack to comply with the api spec ... which sucks
987	Get Policy version s rules
988	Create a policy version
989	Activate a policy version
990	Update policy version all rules
991	List cloudlet Origins
992	Template to convert
993	Wrap the string of into num_lines lines .
994	Consuming yahoo finances api and transform in hash for ruby
995	Treating data in hash
996	new metodo for convert currency
997	Surrogate ajax request
998	Execute javascript within the context of a view .
999	Calculate the largest pointsize for text that will be in a width x height box .
1000	subscrible of metod convert in adapter
1001	NCBI does not allow more than 3 requests per second . If the last 3 requests happened within the last 1 second sleep for enough time to let a full 1 second pass before the next request . Add current time to queue .
1002	Creates a schema attribute sibling of any formParameter attribute found based on the found formParameters attribute .
1003	Declare an exchange on the specified channel .
1004	Declare and bind a queue to the specified exchange via the supplied routing key .
1005	Close all channels and then disconnect all the connections .
1006	The home directory .
1007	Parses a String containing multiple paths .
1008	7 bits encoded in decimal number 0th bit = Sunday 6th bit = Saturday Value of 127 = > all days are on
1009	Do something once within this tracked period
1010	Adds a schema_hash attribute to bodies with schema which allows for the generation of schema table views
1011	Add a WeekDays attribute
1012	Returns the audit list for the specified column
1013	Creates a new analyzer Analyzes the file and returns the result
1014	Sets the Galena example Defaults attributes to new objects .
1015	Creates a new ScriptList . Takes params script_dir script_file and show_methods Retrieves the information about scripts and methods from the script directory
1016	Retrieve the methods including comments if available
1017	Closes the current connection to Turntable if one was previously opened .
1018	Runs the given API command .
1019	Registers a handler to invoke when an event occurs in Turntable .
1020	Gets the user with the given DJ name . This should only be used if the id of the user is unknown .
1021	Get all avatars availble on Turntable .
1022	Finds songs that match the given query .
1023	Triggers callback handlers for the given Turntable command . This should either be invoked when responses are received for Turntable or when triggering custom events .
1024	Resets the keepalive timer to run at the given interval .
1025	Callback when session authentication is missing from the connection . This will automatically authenticate with configured user as well as set up a heartbeat .
1026	Callback when the session has ended . This will automatically reconnect if allowed to do so .
1027	Runs a given block and retries that block after a certain period of time if any of the specified exceptions are raised . Note that there is no limit on the number of attempts to retry .
1028	Pauses the current fiber until it is resumed with response data . This can only get resumed explicitly by the provided block .
1029	build page tree from specified root_depth default second level root with sitemap property to render a sitemap from top root of current page
1030	build page breadcrumbs from specified root_depth default root
1031	Returns whether each of the given attribute values either equals the respective other attribute value or one of the values is nil or Not Specified .
1032	Parses raw XML feed and creates Feed and Article objects to be rendered . Returns false if feed cannot be parsed .
1033	Some feeds use summary for the full article body other feeds use content . This prefers content but falls back to summary .
1034	Looks up a scope name from the registered recognizers and then from the converters .
1035	Gets the playlist represented by the given attributes .
1036	Set the views center coordinates with a given zoom level
1037	Set the views latitude and longitude with a given zoom level
1038	Get the current zoom level
1039	Sets the from Location .
1040	Sets the to Location .
1041	Create a CliOptions object
1042	Returns the absolute path of the output directory specified by the cli .
1043	returns the match history of a summoner
1044	Disables an enabled user
1045	Enables a disabled user
1046	Unlocks a user
1047	Returns a TransferEventParameters which serves as a proxy for saving this SpecimenPosition .
1048	Generates ruby code from the input places the Ruby files in the output
1049	Reset configuration options to their defaults
1050	Merge files based on common header columns
1051	create a filter for the columns that match the header filter
1052	Returns true if this ConsentTierStatus ConsentTier is nil the other ConsentTierStatus ConsentTier is nil both ConsentTier identifiers are equal or both ConsentTier statements are equal .
1053	Processes the filter and returns the values that respect the filter
1054	Adds the given storable to this container . If the storable has a current position then the storable is moved from that position to this container . The new position is given by the given coordinate if given to this method .
1055	Finds the container with the given name or creates a new container of the given type if necessary .
1056	Adds the given storable to a container within this StorageContainer s hierarchy .
1057	Creates a subcontainer which holds the given storable . Creates nested subcontainers as necessary .
1058	Returns a StorageType array of descendant StorageTypes which can hold the given storable or nil if no such path exists .
1059	Attempts to set attributes on the object only if they ve been explicitly defined by the class . Note that this will also attempt to interpret any metadata properties as additional attributes .
1060	Determines whether this avatar is available to the current user .
1061	Updates the current user s avatar to this one .
1062	call to get champions
1063	Save meta tags records into one hash
1064	Initialize the col_filter that contains columns to be considered for mapping . If no columns are provided that is being empty a filter with all columns is returned
1065	Declares an annotation scoped by this class .
1066	Loads this class s annotations .
1067	Builds a new annotation module for the given module name and options .
1068	used by the add viewable link
1069	Returns the header
1070	Loads the attributes for this room . Attributes will automatically load when accessed but this allows data to be forcefully loaded upfront .
1071	Sets the current attributes for this room ensuring that the full list of listeners gets set first so that we can use those built users to then fill out the collection of djs moderators etc .
1072	Enters the current room .
1073	Sets the sticker placements for each dj
1074	Skips the song .
1075	Vote for the song .
1076	Triggers the heart animation for the song .
1077	Adds the song to one of the user s playlists .
1078	Move a song from one location in the playlist to another .
1079	Adds the given subtype to the list of subtypes which this StorageType can hold .
1080	Copies the other child types into this container s child types .
1081	Generate Ruby code for Steam Language
1082	Load the grammars
1083	Parses an IO stream .
1084	An array of hashes containing the imports found in the parsed Steam Language file .
1085	Returns an array of classes parsed from the IO stream . The array contains hashes with class information and variables .
1086	Returns an array of eneums parsed from the IO stream . The array contains hashes with enum information and variables .
1087	Pull events until the start of an element of tag name + name + is reached .
1088	Pull all text nodes until the next + end_element + event . Return the concatenation of text nodes .
1089	Returns the I18n translation for comparison . dom_classes .
1090	Processes the filter and returns the filtered columns
1091	Display a log message . The block if specified is executed in an indented region after the log message is shown .
1092	Sets the role id to the given value which can be either a String or an Integer . An empty or zero value is converted to nil .
1093	return feed of current page infomation including image
1094	Creates a new ControlledValueFinder for the given attribute . The optional YAML properties file name maps input values to controlled values .
1095	A Hash of the default configuration options
1096	Appends the new subscriptions to the subscription list and writes the results out to the file .
1097	Append feeds to current subscription list and return XML document
1098	Executes the calculator and writes the result to the _outfile_
1099	Casts a string to a date
1100	Add a User to the group
1101	Initializes a new Annotator for the given database .
1102	Returns this Person s name as a Name structure or nil if there is no last name .
1103	Sets this Person s name to the name string or Name object . A string name argument is parsed using Name . parse .
1104	Returns the CV with the given public_id_or_alias and value . Loads the CV if necessary from the database . The loaded CV does not have a parent or children .
1105	Creates a new controlled value record in the database from the given ControlledValue cv . The default identifier is the next identifier in the permissible values table .
1106	Deletes the given ControlledValue record in the database . Recursively deletes the transitive closure of children as well .
1107	Returns a new ControlledValue with attributes set by the given attribute = > value hash .
1108	Yield with the hash temporary merged into the context variables . Only variables specifically named in + hash + will be reset when the yield returns .
1109	Yield with a temporary host list
1110	Yield with a temporary username override
1111	Execute a shell command on each host
1112	Copy a file or readable to the host filesystems .
1113	Reads a remote file from each host .
1114	Writes a string to a file on the host filesystems .
1115	Ping each host by trying to connect to port 22
1116	Execute a block only once per host . It is usually preferable to make tasks idempotent but when that isn t possible + once + will only execute the block on hosts where a block with the same key hasn t previously been successfully executed .
1117	Updates this user s profile information .
1118	Loads the list of users that are connected to the current user through a social network like Facebook or Twitter .
1119	Loads the list of users that the current user is a fan of .
1120	Loads the list of users that are a fan of the current user .
1121	Gets the stickers that have been purchased by this user .
1122	Gets the users that have been blocked by this user .
1123	Updates the user s profile information
1124	Updates the laptop currently being used
1125	Sets the user s current status
1126	Prepares selectors and weights storage Analyze input and add appropriate part
1127	Generate weighted - random value
1128	Builds a new handler bound to the given event .
1129	Determines whether the conditions configured for this handler match the event data
1130	Moves the given Storable from its current Position if any to this Container at the optional coordinate . The default coordinate is the first available slot within this Container . The storable Storable position is updated to reflect the new location . Returns self .
1131	Copies this Container s ContainerType capacity if it exists to the Container capacity .
1132	Loads the user s current Turntable preferences .
1133	Creates a new extractor Executes the extractor
1134	call to receive all teams for a summoner
1135	Get the document type from the YAML file next to the document .
1136	Creates a new allocator . Options are infile outfile key rows and columns to allocate to key Executes the allocator and assigns column values to the key
1137	Find the span between two Vectors
1138	Gets list of feed_urls requests each of them and uses the constructor to make Feed and Article objects then calls to the renderers to render the page and stylesheets .
1139	Prints configuration file source and destination directory to STDOUT .
1140	Provides build time logging information and writes it to STDOUT .
1141	Executes the operation and writes the result to the outfile
1142	Creates the spread sheet operands for the arithmetic operation
1143	Publishes the given params to the underlying web socket . The defaults initially configured as part of the connection will also be included in the message .
1144	Publishes the given params to the web socket
1145	Publishes the given params to the HTTP API
1146	Callback when a message has been received from the remote server on the open socket .
1147	Adds an empty capacity and default dimension labels if necessary . The default + one_dimension_label + is Column if there is a non - zero dimension capacity Unused otherwise . The default + two_dimension_label + is Row if there is a non - zero dimension capacity Unused otherwise .
1148	Attempt to connect to port 22 on the host .
1149	Copy files or directories to the host .
1150	Write a string to a host file .
1151	Read a host file .
1152	Execute a command on the host and return its output .
1153	Returns true if Storable is a Specimen and supported by this SpecimenArrayType .
1154	Process the aggregation of the key values . The result will be written to _outfile_
1155	Writes the aggration results
1156	Initializes the sum row title an positions as well as the sum column title and position
1157	Defines casting rules
1158	Resolve a set of dependencies + dep_hashes + from repositories + repos + .
1159	Board shouldn t care about game rules
1160	Parse given arguments
1161	Clone of an existing bug
1162	Provides league information of a summoner
1163	Get all entries for the given summoner
1164	Sets the current user s stickers .
1165	From an array of supplied URIs will request each one and attempt to find a feed URI on the page . If one is found it will be added to an array and returned .
1166	Sets the collection status for this SCG . If the SCG status is set to + Complete + then the status of each of the SCG Specimens with status + Pending + is reset to + Collected + .
1167	Makes a consent status for each registration consent .
1168	Returns the first event in the protocol registered with this SCG .
1169	Returns the collection protocol coordinator . Fetches the CP if necessary and possible . Adds defaults to the CP if necessary which sets a default coordinator if possible .
1170	Decrements this parent s available quantity by the given child s initial quantity if the specimen types are the same and there are the relevant quantities .
1171	Updates the given dependent .
1172	Updates the given user address .
1173	Adds the specimen position to its save template .
1174	Ensures that a primary annotation hook exists .
1175	The annotation proxy is not copied because the attribute redirects to the hook rather than the proxy . Set the template copy source proxy to the target object proxy using the low - level Java property methods instead .
1176	Create the table
1177	Write table to _outfile_
1178	Casts a string to an integer or float depending whether the value has a decimal point
1179	Initializes sum_row_pos sum_row and sum_row_patterns based on the provided sum option
1180	Adds a value in the specified column to the sum_row
1181	Creates the sum_row when the file has been completely processed
1182	Used to wrap results from various Enumerable methods that are defined to return an array
1183	Add a new node causing dependencies to be re - evaluated
1184	Recurse through node edges
1185	Gets the rooms where the current user s friends are currently listening .
1186	Finds rooms that match the given query string .
1187	Loads the attributes for this playlist . Attributes will automatically load when accessed but this allows data to be forcefully loaded upfront .
1188	Updates this playlist s information .
1189	Whether this is the currently active playlist
1190	Initializes the attribute from given arguments and returns new immutable collection with the attribute
1191	Adds specimens to this protocol . The argumentes includes the specimens to add followed by a Hash with parameters and options . If the SCG registration parameter is not set then a default registration is created which registers the given participant to this protocol .
1192	returns a summoner object
1193	returns the names for the ids
1194	returns the runebook of a summoner
1195	returns the runebook for multiple summoners
1196	Initialize with the json config . Zip the input entries .
1197	Collects and receives this Collectible with the given options .
1198	Creates a new filter Creates the filters based on the given patterns
1199	Checks whether the values match the boolean filter
1200	Yields the column value and whether the filter matches the column
1201	Creates a filter based on the provided rows and columns select criteria
1202	Adds a single value to the filter
1203	Adds a single value and an associated type to the filter
1204	Adds a range to the filter
1205	Adds a range and the associated types to the filter
1206	Adds a comparisson filter
1207	Adds a date filter
1208	Adds a date range filter
1209	Adds a number filter
1210	Adds a number range filter
1211	Creates a new annotation object in the caTissue database .
1212	Joins items in an array together in a grammatically correct manner .
1213	Format a String for awesome_print display .
1214	ensure meta always will be saved as json instead of json string
1215	Creates a new Collector Execute the collector
1216	Initializes the collection
1217	Initialize with default stdout output and verbose false Gets the logging object
1218	Experimental require_aether method for use in irb or just for convenience . Not threadsafe .
1219	Creates a lookup table from the source file values . The join column of the source file is the key
1220	Initializes the column positions where the source file columns have to be inserted . If no column positions are provided the inserted columns are put at the beginning of the row
1221	Initializes joiners based on joins positions and columns
1222	Sets the defaults if necessary . The start date is set to now . The title is set to the short title .
1223	Returns a subset of the spread sheet and returns a new spread sheet with the result and the corresponding row and column labels
1224	Collects the operation on each column and returns the result in an array
1225	Renames the row and column labels
1226	Prints the spread sheet in a matrix with column labels and row labels . If no labels are available the column number and row number is printed
1227	Creates rows from provided array or file . If array doesn t provide equal column sizes the array is extended with NotAvailable values
1228	If rows are of different column size the rows are equalized in column size by filling missing columns with NA
1229	Checks whether all rows have the same column size . Returns true if all columns have the same column size
1230	Coerces a number or an array to a spread sheet
1231	Conducts the calculation of this spread sheet with the provided value based on the operator . It s is a number or an array it is coerced into a spread sheet
1232	Processes the counting on the in file
1233	Writes the count results
1234	Initializes the sum row title an positions as well as the sum column title
1235	Initialize the key columns and headers
1236	Arrange heading in the original sequence regarding conditional column filters
1237	Processes the filter on the given row
1238	Gets the private conversation history with this user .
1239	Gets the location of the user .
1240	Boots the user for the specified reason .
1241	Reports abuse by a user .
1242	Returns characteristics to use for a derived specimen . The new characteristics is copied from this parent specimen s characteristics without the identifier .
1243	Set the maps region
1244	Returns the collection site for which this participant has a MRN . If there is not exactly one such site then this method returns nil . This method is a convenience for the common situation where a participant is enrolled at one site .
1245	Returns whether this SpecimenRequirement characteristics matches the other SpecimenRequirement characteristics on the tissue site and tissue side .
1246	Returns the first SCG CP coordinator if any .
1247	Export translations to JavaScript considering settings from configuration file
1248	Convert translations to JSON string and save file .
1249	Initialize and return translations
1250	Loads the caTissue classpath and connection properties .
1251	Parse the vatsim data file and store output as necessary
1252	Initialize the system by downloading status and vatsim data files
1253	Download a url to a file path
1254	Return random vatsim data url from status file
1255	= > Clear Cache
1256	= > Define JSON Writer
1257	= > Check if a string is an existing file and return it s content
1258	= > Return Common Elements of an Array
1259	Initialize a new EventListener daemon instance
1260	Register the observer class watcher
1261	Register an observer instance and start listening for events on its associated queue . Also ensure that we are listening for observer class update events
1262	Unregister an observer instance and cancel consumption of messages . Any pre - fetched messages will be returned to the queue .
1263	Create or return the observer queue which listens for ModelWatcher events
1264	Return hash of data to be serialized to JSON
1265	action is a string either post or draft
1266	action is a string either publish or unpublish
1267	pass a string either publish or unpublish
1268	Resolves relative links to Markdown files .
1269	= > Build the HTTP Connection
1270	= > Add an Entitity to an Existing Alert Policy
1271	= > Delete an Entitity from an Existing Alert Policy
1272	= > Get a Server based on ID
1273	= > Get a Server based on Name
1274	= > List the Servers with a Label
1275	Create or attach to a queue on the specified exchange . When an event message that matches the observer s routing keys is received parse the event and call handle_event on same .
1276	Initialize a new BunnyClient instance . Note that a connection is not established until any other method is called
1277	Find or create a named queue and bind it to the specified exchange
1278	Subscribe to messages on the Bunny queue . The provided block will be called each time a message is received . The message will be acknowledged and deleted from the queue unless an exception is raised from the block . In the case that an uncaught exception is raised the message is rejected and any declared exception handlers will be called .
1279	Open a new thread - specific AMQP connection channel or return the current channel for this thread if it exists and is currently open . New channels are created with publisher confirms enabled . Messages will be prefetched according to Isimud . prefetch_count when declared .
1280	Publish a message to the specified exchange which is declared as a durable topic exchange . Note that message is always persisted .
1281	Generate a timestamped post
1282	Generate a non - timestamped draft
1283	Todo make this take a path instead?
1284	0000002 thanks google for all of this
1285	had to convert these from C ... fun
1286	Override functionality from CanCan to allow objects to masquerade as other objects
1287	= > Daemonization for Periodic Management
1288	= > Run the Application
1289	Check for a _posts directory in current directory . If there s not one check for a _config . yml and look for a custom src directory . If we don t find one puke an error message and die . If we do return the name of the directory
1290	Get a layout as a string . If layout_path is non - nil will open that file and read it otherwise will return a default one and a file extension to use
1291	Print a usage message and exit
1292	= > Primary Notification Message Controller
1293	= > OS X Cocoa Messages
1294	Analyses a string + string + . Returns an array of analysed strings if the string is accepted or an empty array if not .
1295	Generates a string + string + . Returns an array of generated strings if the string is accepted or an empty array if not .
1296	= > Configure the CLI
1297	Parse the specs on the given file path and return those that have not been fulfilled or need to be updated .
1298	= > Remove Non - Reporting Servers
1299	= > Find Servers which should be excluded from Management
1300	Sends an SMS validation request through the gateway
1301	Begins a phone call to the user where they ll need to type their confirmation code
1302	Validate data against provided format
1303	Initiates a new session
1304	Performs a search for geo - attributes .
1305	Adjuster Builders Apply adjuster when passed condition .
1306	Sequencial apply all adjusters .
1307	Accept any parser when that resopond to parse method .
1308	return the class match by name
1309	Make a lazy connection .
1310	Calculate the desired time to wake up .
1311	Display CRUD icons or links according to setting in use_crud_icons method .
1312	Create a link that is opaque to search engine spiders .
1313	Wraps the given HTML in Rails default style to highlight validation errors if any .
1314	Use on index pages to create dropdown list of filtering criteria . Populate the filter list using a constant in the model corresponding to named scopes .
1315	Returns a link_to tag with sorting parameters that can be used with ActiveRecord . order_by .
1316	Create a set of tags for displaying a field label with inline help . Field label text is appended with a ? icon which responds to a click by showing or hiding the provided help text .
1317	wrapper of keyboard operations
1318	standard open file dialog
1319	Return a structure describing the options .
1320	Add new path to the gitattributes file
1321	Runs the migration .
1322	List parents closest to furthest .
1323	Extract text out of HTML or plain strings . Basically removes html formatting .
1324	Build query attribute hash .
1325	Get the WebSocket API URI
1326	Parse the configuration file
1327	Do additional sanity checking on a hook script
1328	Get all the host IDs and FQDNs and populate the host table
1329	Initialize an empty database
1330	Update the database based on the foreman_hook
1331	Transform and read a list attribute
1332	Transform and read a hash attribute
1333	Transform and write a standard attribute value
1334	Transform and write a list value
1335	Transform and write a hash attribute
1336	Update fields without hitting the callbacks
1337	Controller helper method to filter out non - authorized objects from the passed in array
1338	Helper method available in controllers and views that returns the value of the policy method
1339	shows statistics about difficulty and network power
1340	Find the first saved record
1341	Find a record by id
1342	Iterate over all records in batches
1343	Lazy loader ...
1344	Returns the deserialized mapped key when provided with the former key .
1345	Number of processors seen by the OS and used for process scheduling .
1346	Number of physical processor cores on the current system .
1347	end def run
1348	Reload the events from the event file . Existing events are deleted first .
1349	see if this model is followee of some model
1350	see model s followed history
1351	Puts this thread to sleep until another thread resumes it . Threads will be woken in the chronological order that this was called .
1352	Validates a timeout value
1353	render the template including the handler as a local
1354	this call initiates a race resistant attempt to make sure that there is only 1 clear winner among N potential agents attempting to run the same goal on the same spreadsheet agent s cell
1355	you have the option of picking from many cards pick the best one .
1356	This method is called if your hand is over the hand limit it returns the card that you would like to discard . Returning nil or a card you don t have is a very bad idea . Bad things will happen to you .
1357	This is the method that is called on your turn .
1358	Releases the lock and puts this thread to sleep .
1359	Temporarily unlocks it while a block is run . If an error is raised in the block the it will try to be immediately relocked before passing the error up . If unsuccessful a + ThreadError + will be raised to imitate the core s behavior .
1360	Calculate time elapsed when running block .
1361	stalls test until ^C is hit useful for inspecting page state via firebug
1362	Makes a call to a block that accepts optional arguments
1363	Extracts the rdoc of a given ruby file source .
1364	Add select method to select the fields to return
1365	Sets the pagination info
1366	Pass in a hash that s been encoded as JSON and then Base64 .
1367	see if this model is follower of some model
1368	follow some model
1369	unfollow some model
1370	see user s follow history
1371	Retrieves an item from it .
1372	Initialize can accept custom configuration parameters Lookup for a specific service key passed block is called with the result values in case of http backend it return the result directly
1373	Announce a specific service key available on specific port passed block is called when the announce is sent
1374	Condition Builders A innner method for some condition builders . For build conditions AND NAND OR NOR XOR XNOR .
1375	Post to the given path including the correct signature header based on the payload and secret .
1376	Finds height of the image relative to provided width
1377	Iterates over each pixel of resized image to find closest color
1378	Iterates over the palette to find the most similar color
1379	Takes in a string of colors and puts them out as background colored spaces For example rGK creates a light_red square a green square and a black square
1380	build a depth first tree
1381	Returns APOD info for specified day .
1382	Validates a timeout value converting to a acceptable value if necessary
1383	If there is already an authorization by this note use it ; otherwise create it
1384	Initialize passing configuration Send a message to grape
1385	Includes the stylesheets and javescripts into what ever view this is called to .
1386	Initialize an empty OpenStruct to hold configuration options To set a config option call the corresponding method with an argument . To retrieve a config option call the corresponding method without an argument .
1387	constructor return hijri date with month and day names
1388	Hijri to julian
1389	Hijri to gregorian
1390	Add Days - Weeks - Months - Years
1391	comparison operator return hijri date plus n days
1392	Sets it to an error .
1393	Transform the ruby obj - > to a Hash
1394	sets the site for the class in which this module is extended
1395	def all_attributes_set? site && user && password end routes to active resource find
1396	creates an active resource class dynamically . All the attributes are set automatically . Avoid calling this method directly
1397	Run the agent app!
1398	Open the WebSocket channel with the Manager
1399	If running as root fix ownership of var and etc dirs
